name: "Build container image"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ghcr.io/haakco
  CREATE_IMAGE_NAME: custopizer

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    concurrency:
      group: "${{ env.DOCKER_REGISTRY }}/${{ env.CREATE_IMAGE_NAME }}:${{github.ref_name}}"
      cancel-in-progress: true
    steps:
      - name: "‚¨á Checkout"
        uses: actions/checkout@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.CREATE_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=tag
            type=ref,event=branch
      - name: "üê≥ Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2
      - name: "üê≥ Login to GHCR"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: "üèó Build"
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./src
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          # yamllint disable-line rule:line-length
          cache-from: "type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.CREATE_IMAGE_NAME }}:buildcache"
          # yamllint disable-line rule:line-length
          cache-to: "type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.CREATE_IMAGE_NAME }}:buildcache,mode=max"
